<!DOCTYPE html>
<html>

<!-- For a Express App with localhost:3000/?name= -->
<!-- Common Reflected XSS methods would try: -->
<!-- 1. Insert old HTML tags into the URL (e.g., "/?name=<b>Hello</b>")-->
<!-- 2. Manipulate through the console encodeURIComponent('<b>Hello</b>'), and put it in the URL after e.g., "/?name=" -->

<!-- Has to trick people to click on the social link - no database connection, and the XSS attack come directly inside the response. -->
<!-- The page is rendered with things that come from the request in the body. -->

<!-- Method: Make sure that everything is escaped. -->

<head>
    <title>Express App</title>
</head>

<body>
    <!-- Always use something that are HTML escaped, no matter the framework or engine. -->
    <!-- In this case, check the site: https://ejs.co/#docs -->
    <p>Hello <%= name %>!</p>
    <form class="form-example" action="/subscribe" method="post" autocomplete="off"">
        <div class=" form-example">
            <label for="name">Enter your name: </label>
            <input type="text" name="name" id="name" required />
        </div>
        <div class="form-example">
            <label for="email">Enter your email: </label>
            <input type="email" name="email" id="email" required />
        </div>
        <div class="form-example">
            <input type="submit" value="Subscribe!">
        </div>
    </form>
</body>

</html>